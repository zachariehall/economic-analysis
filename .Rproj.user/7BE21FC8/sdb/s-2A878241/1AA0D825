{
    "contents" : "#Install\n#install.packages(\"jsonlite\", repos=\"http://cran.r-project.org\")\n#install.packages(\"httr\")\n\n#load\nlibrary(jsonlite)\nlibrary(httr)\nlibrary(RCurl)\n\nSTART_YEAR <- '2000'\nEND_YEAR <- '2014'\nUNEMPLOYMENT_SERIES_ID <- c('LNS14000000')\nBLS_API_KEY <- '9ec4fb8261624813883cc86a80847310'\n\nif(!exists(\"unemploymentData\"))\n  unemploymentData <- NULL\n\n#If unemploymentData is null or the year range goes from start year to end year, do not query the BLS\n# ---- can run out of daily allowed requests for a given API\nif(is.null(unemploymentData) || START_YEAR != min(unEmploymentSubData$year) || END_YEAR != max(unEmploymentSubData$year)){\n  # Query the Bureau of Labor Statistcs for Unemployment Data\n  payload <- list('seriesid'=UNEMPLOYMENT_SERIES_ID, 'startyear'=unbox(START_YEAR), \n                  'endyear'=unbox(END_YEAR), 'registrationKey'=unbox(BLS_API_KEY))\n  \n  h = basicTextGatherer()\n  h$reset()\n  curlPerform(url='http://api.bls.gov/publicAPI/v2/timeseries/data/', \n              httpheader=c('Content-Type' = \"application/json;\"),\n              postfields=toJSON(payload),   \n              writefunction = h$update,\n              verbose = TRUE)\n  \n  response <- h$value()\n  \n  # TODO: Support multiple series - currently only working with unemployment rates, without the ability\n  # to filter or organize for other data\n  \n  #Collection and getting right to the data we care about\n  unemploymentData <- fromJSON(response)\n  unemploymentData <- unemploymentData$Results$series[2][1,1]\n  unemploymentData <- unemploymentData[[1]] \n  \n  #subset we care about (year, month, value)\n  unEmploymentSubData <- unemploymentData[c(\"year\", \"periodName\", \"value\")]\n  unEmploymentSubData$value <- as.numeric(unEmploymentSubData$value)\n  unEmploymentSubData$date <- as.Date(paste(\"1\", unEmploymentSubData$periodName, unEmploymentSubData$year, sep=\" \"), format = \"%d %B %Y\")\n  \n  #orderRate <- order(unEmploymentSubData$date)\n  unEmploymentSorted <- unEmploymentSubData[order(unEmploymentSubData$date, decreasing = FALSE), ]\n  #reverse it - not good enough... need to sort by date\n  #r_unEmploymentSubData <- unEmploymentSubData[rev(seq_len(nrow(unEmploymentSubData))), ]\n}else{\n  print(\"Skipping BLS query\")\n  cat('Start Year: ', START_YEAR, '\\n')\n  cat('End Year: ', END_YEAR, '\\n')\n}\n\n# Logical vector to grab the quarterly dates\n#qrtMonths = format(unEmploymentSorted$date, '%m') %in% c('01', '04', '07', '10') & format(unEmploymentSorted$date, '%d') == '01'\nqrtMonths = format(unEmploymentSorted$date, '%m') %in% c('01', '07') & format(unEmploymentSorted$date, '%d') == '01'\n\n#plot(unEmploymentSorted$value, type=\"o\", ann=FALSE, xlab='Date', yaxt='n', xaxt='n', col=2)\nplot(x=unEmploymentSorted$date, y=unEmploymentSorted$value, type=\"l\", ann=FALSE, xlab='Date', yaxt='n', xaxt='n', col=2)\ntitle(ylab=\"Unemployment Rate (%)\")\n\n#axis(1, at=unEmploymentSorted$date[qrtMonths], labels=format(unEmploymentSorted$date[qrtMonths], '%b-%y'))\naxis(1, at=unEmploymentSorted$date[qrtMonths], labels=format(unEmploymentSorted$date[qrtMonths], '%b-%y'),  srt=45, las=2)\naxis(2, las=1)\nabline(v=unEmploymentSorted$date[qrtMonths], col='grey', lwd=0.5)\n\nbox()\n\n\n",
    "created" : 1422924301259.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3036764821",
    "id" : "1AA0D825",
    "lastKnownWriteTime" : 1422924080,
    "path" : "~/Dropbox/Development/R Workspace/InvestmentAnalysis/BLS_Data.R",
    "project_path" : "BLS_Data.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}